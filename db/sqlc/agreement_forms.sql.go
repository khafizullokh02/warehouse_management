// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: agreement_forms.sql

package db

import (
	"context"
)

const createAgreementForms = `-- name: CreateAgreementForms :one
INSERT INTO agreement_forms (
    from_account,
    to_account,
    product_ids,
    action_type_for_agreement,
    wholesale_price,
    retail_price
  )
VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6
  )
RETURNING id, from_account, to_account, product_ids, action_type_for_agreement, wholesale_price, retail_price
`

type CreateAgreementFormsParams struct {
	FromAccount            int32      `json:"from_account"`
	ToAccount              int32      `json:"to_account"`
	ProductIds             []int32    `json:"product_ids"`
	ActionTypeForAgreement ActionType `json:"action_type_for_agreement"`
	WholesalePrice         float64    `json:"wholesale_price"`
	RetailPrice            float64    `json:"retail_price"`
}

func (q *Queries) CreateAgreementForms(ctx context.Context, arg CreateAgreementFormsParams) (AgreementForm, error) {
	row := q.db.QueryRow(ctx, createAgreementForms,
		arg.FromAccount,
		arg.ToAccount,
		arg.ProductIds,
		arg.ActionTypeForAgreement,
		arg.WholesalePrice,
		arg.RetailPrice,
	)
	var i AgreementForm
	err := row.Scan(
		&i.ID,
		&i.FromAccount,
		&i.ToAccount,
		&i.ProductIds,
		&i.ActionTypeForAgreement,
		&i.WholesalePrice,
		&i.RetailPrice,
	)
	return i, err
}
